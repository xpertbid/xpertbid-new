<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;

class UnitSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $units = [
            // Weight Units
            [
                'tenant_id' => 1,
                'name' => 'Kilogram',
                'symbol' => 'kg',
                'type' => 'weight',
                'conversion_factor' => 1.000000,
                'base_unit' => 'kg',
                'description' => 'Base unit for weight measurement',
                'is_base_unit' => true,
                'status' => true,
                'sort_order' => 1,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Gram',
                'symbol' => 'g',
                'type' => 'weight',
                'conversion_factor' => 0.001000,
                'base_unit' => 'kg',
                'description' => 'Gram unit for weight measurement',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 2,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Pound',
                'symbol' => 'lb',
                'type' => 'weight',
                'conversion_factor' => 0.453592,
                'base_unit' => 'kg',
                'description' => 'Pound unit for weight measurement',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 3,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Ounce',
                'symbol' => 'oz',
                'type' => 'weight',
                'conversion_factor' => 0.028349,
                'base_unit' => 'kg',
                'description' => 'Ounce unit for weight measurement',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 4,
                'created_at' => now(),
                'updated_at' => now(),
            ],

            // Volume Units
            [
                'tenant_id' => 1,
                'name' => 'Liter',
                'symbol' => 'L',
                'type' => 'volume',
                'conversion_factor' => 1.000000,
                'base_unit' => 'L',
                'description' => 'Base unit for volume measurement',
                'is_base_unit' => true,
                'status' => true,
                'sort_order' => 1,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Milliliter',
                'symbol' => 'ml',
                'type' => 'volume',
                'conversion_factor' => 0.001000,
                'base_unit' => 'L',
                'description' => 'Milliliter unit for volume measurement',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 2,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Gallon',
                'symbol' => 'gal',
                'type' => 'volume',
                'conversion_factor' => 3.785412,
                'base_unit' => 'L',
                'description' => 'Gallon unit for volume measurement',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 3,
                'created_at' => now(),
                'updated_at' => now(),
            ],

            // Length Units
            [
                'tenant_id' => 1,
                'name' => 'Meter',
                'symbol' => 'm',
                'type' => 'length',
                'conversion_factor' => 1.000000,
                'base_unit' => 'm',
                'description' => 'Base unit for length measurement',
                'is_base_unit' => true,
                'status' => true,
                'sort_order' => 1,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Centimeter',
                'symbol' => 'cm',
                'type' => 'length',
                'conversion_factor' => 0.010000,
                'base_unit' => 'm',
                'description' => 'Centimeter unit for length measurement',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 2,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Inch',
                'symbol' => 'in',
                'type' => 'length',
                'conversion_factor' => 0.025400,
                'base_unit' => 'm',
                'description' => 'Inch unit for length measurement',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 3,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Foot',
                'symbol' => 'ft',
                'type' => 'length',
                'conversion_factor' => 0.304800,
                'base_unit' => 'm',
                'description' => 'Foot unit for length measurement',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 4,
                'created_at' => now(),
                'updated_at' => now(),
            ],

            // Area Units
            [
                'tenant_id' => 1,
                'name' => 'Square Meter',
                'symbol' => 'm²',
                'type' => 'area',
                'conversion_factor' => 1.000000,
                'base_unit' => 'm²',
                'description' => 'Base unit for area measurement',
                'is_base_unit' => true,
                'status' => true,
                'sort_order' => 1,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Square Foot',
                'symbol' => 'ft²',
                'type' => 'area',
                'conversion_factor' => 0.092903,
                'base_unit' => 'm²',
                'description' => 'Square foot unit for area measurement',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 2,
                'created_at' => now(),
                'updated_at' => now(),
            ],

            // Count Units
            [
                'tenant_id' => 1,
                'name' => 'Piece',
                'symbol' => 'pcs',
                'type' => 'count',
                'conversion_factor' => 1.000000,
                'base_unit' => 'pcs',
                'description' => 'Base unit for counting items',
                'is_base_unit' => true,
                'status' => true,
                'sort_order' => 1,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Dozen',
                'symbol' => 'dz',
                'type' => 'count',
                'conversion_factor' => 12.000000,
                'base_unit' => 'pcs',
                'description' => 'Dozen unit for counting items',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 2,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Pack',
                'symbol' => 'pack',
                'type' => 'count',
                'conversion_factor' => 1.000000,
                'base_unit' => 'pcs',
                'description' => 'Pack unit for counting items',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 3,
                'created_at' => now(),
                'updated_at' => now(),
            ],
            [
                'tenant_id' => 1,
                'name' => 'Box',
                'symbol' => 'box',
                'type' => 'count',
                'conversion_factor' => 1.000000,
                'base_unit' => 'pcs',
                'description' => 'Box unit for counting items',
                'is_base_unit' => false,
                'status' => true,
                'sort_order' => 4,
                'created_at' => now(),
                'updated_at' => now(),
            ],
        ];

        foreach ($units as $unit) {
            DB::table('units')->insert($unit);
        }
    }
}